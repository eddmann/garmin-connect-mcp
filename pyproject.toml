[project]
name = "garmin-connect-mcp"
version = "1.0.0"
description = "Model Context Protocol server for Garmin Connect API integration"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastmcp>=2.12.4",
    "garminconnect>=0.2.25",
    "pydantic>=2.10.5",
    "pydantic-settings>=2.7.1",
    "python-dotenv>=1.0.1",
    "httpx>=0.28.1",
]

[project.scripts]
garmin-connect-mcp = "garmin_connect_mcp.server:main"
garmin-connect-mcp-auth = "garmin_connect_mcp.scripts.setup_auth:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
    "freezegun>=1.5.1",
    "ruff>=0.8.6",
    "pyright>=1.1.390",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "UP"]
ignore = ["E501"]  # Line length enforced by ruff format instead

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files
"src/garmin_connect_mcp/server.py" = ["E402"]  # Imports must come after FastMCP initialization

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "basic"
reportMissingTypeStubs = false
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportUnknownParameterType = false
reportMissingTypeArgument = false
reportArgumentType = false
reportMissingParameterType = false
